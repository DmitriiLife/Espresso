package ru.kkuzmichev.simpleappforespresso;import static androidx.test.espresso.Espresso.onView;import static androidx.test.espresso.action.ViewActions.click;import static androidx.test.espresso.assertion.ViewAssertions.matches;import static androidx.test.espresso.intent.Intents.intended;import static androidx.test.espresso.intent.matcher.IntentMatchers.hasAction;import static androidx.test.espresso.intent.matcher.IntentMatchers.hasData;import static androidx.test.espresso.matcher.ViewMatchers.isDisplayed;import static androidx.test.espresso.matcher.ViewMatchers.withContentDescription;import static androidx.test.espresso.matcher.ViewMatchers.withId;import static androidx.test.espresso.matcher.ViewMatchers.withText;import static org.hamcrest.CoreMatchers.allOf;import static org.hamcrest.CoreMatchers.not;import static org.junit.Assert.assertEquals;import static ru.kkuzmichev.simpleappforespresso.CustomViewAssertions.isRecyclerView;import static ru.kkuzmichev.simpleappforespresso.CustomViewMatcher.recyclerViewSizeMatcher;import android.content.Context;import android.content.Intent;import android.os.SystemClock;import androidx.test.espresso.IdlingRegistry;import androidx.test.espresso.ViewInteraction;import androidx.test.espresso.intent.Intents;import androidx.test.ext.junit.runners.AndroidJUnit4;import androidx.test.platform.app.InstrumentationRegistry;import androidx.test.rule.ActivityTestRule;import org.junit.After;import org.junit.Before;import org.junit.Rule;import org.junit.Test;import org.junit.runner.RunWith;@RunWith(AndroidJUnit4.class)public class EspressoTest {    @Before    public void registerIdlingResources() {        IdlingRegistry.getInstance().register(EspressoIdlingResources.idlingResource);    }    @After    public void unregisterIdlingResources() {        IdlingRegistry.getInstance().unregister(EspressoIdlingResources.idlingResource);    }    @Rule    public ActivityTestRule<MainActivity> activityTestRule =            new ActivityTestRule<>(MainActivity.class);    @Test    public void checkMainText() {        ViewInteraction mainText = onView(withId(R.id.text_home));        mainText.check(matches(isDisplayed()));        mainText.check(matches(withText("This is home fragment")));    }    @Test    public void useAppContext() {        // Context of the app under test.        Context appContext = InstrumentationRegistry.getInstrumentation().getTargetContext();        assertEquals("ru.kkuzmichev.simpleappforespresso", appContext.getPackageName());    }    @Test    public void openMenu() {        ViewInteraction menu = onView(withContentDescription("Open navigation drawer"));        menu.check(matches(isDisplayed()));        menu.perform(click());    }    @Test    public void openMoreOptions() {        ViewInteraction moreOptions = onView(withContentDescription("More options"));        moreOptions.check(matches(isDisplayed()));        moreOptions.perform(click());    }    @Test    public void checkSlideShow() {        openMenu();        ViewInteraction slideShow = onView(allOf(withId(R.id.design_menu_item_text), withText("Slideshow")));        slideShow.check(matches(isDisplayed()));        slideShow.perform(click());        ViewInteraction textSlideShow = onView(withId(R.id.text_slideshow));        textSlideShow.check(matches(isDisplayed()));        textSlideShow.check(matches(withText("This is slideshow fragment")));    }    @Test    public void checkBoxHome() {        openMenu();        ViewInteraction home = onView(allOf(withId(R.id.design_menu_item_text), withText("Home")));        home.check(matches(isDisplayed()));        home.perform(click());    }    @Test    public void checkBoxGallery() {        openMenu();        ViewInteraction gallery = onView(allOf(withId(R.id.design_menu_item_text), withText("Gallery")));        gallery.check(matches(isDisplayed()));        gallery.perform(click());        ViewInteraction description = onView(allOf(withId(R.id.item_number), withText("7")));        description.check(matches(isDisplayed()));    }    @Test    public void checkBoxText() {        checkMainText();        checkBoxHome();        checkMainText();        checkBoxGallery();        checkSlideShow();    }    @Test    public void checkIntent() {       openMoreOptions();       ViewInteraction settingsItem = onView(withId(R.id.title));       settingsItem.check(matches(isDisplayed()));        Intents.init();//start recording        settingsItem.perform(click());        intended(allOf(                hasData("https://google.com"),                hasAction(Intent.ACTION_VIEW)        ));        Intents.release(); //Clean recorded    }    @Test    public void checkBoxGalleryItemSeven() {        checkMainText();        openMenu();        checkBoxGallery();    }    @Test    public void checkList() {        checkMainText();        openMenu();        checkBoxGallery();        ViewInteraction recycleList = onView(withId(R.id.recycle_view));        recycleList.check(isRecyclerView());        recycleList.check(matches(recyclerViewSizeMatcher(10)));    }}